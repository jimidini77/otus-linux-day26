---
- name: SW CONFIG | Install and configure software
  hosts: all
  become: true

  tasks:
    - name: SW CONFIG | Install EPEL Repo package from standart repo
      yum:
        name: epel-release
        state: present
      tags:
        - epel-package
        - packages

    - name: SW CONFIG | Install BORGBACKUP package from EPEL Repo
      yum:
        name: borgbackup
        state: latest
      tags:
        - borg-package
        - packages

- name: CLIENT CONFIG
  hosts: client
  become: true
  vars:
    backup_vm_ip: 192.168.56.160
    client_vm_ip: 192.168.56.150
  tasks:
    - name: CLIENT CONFIG | Create /root/.ssh/
      file:
        path: /root/.ssh
        mode: u=rwx,g-rwx,o-rwx
        state: directory
        owner: root
        group: root
      tags:
        - user
        - ssh-config
        - client1

    - name: SSH KEYPAIR GENERATION
      openssh_keypair:
        path: /root/.ssh/id_rsa
        size: 2048
      tags:
        - ssh-config
        - client2

    - name: Fetch public key
      fetch:
        src: /root/.ssh/id_rsa.pub
        dest: /tmp/id_rsa.pub
      tags:
        - client3

    - name: Tell client about backup server
      shell: 'ssh-keyscan -H {{ backup_vm_ip }} >> ~/.ssh/known_hosts'
      tags:
        - client4

- name: BACKUP CONFIG | Disk Configuration
  hosts: backup
  become: true
  tasks:
    - name: BACKUP CONFIG | Select disk name
      shell: if [[ $(lsblk | grep sda1) ]]; then echo 'sdb'; else echo 'sda'; fi
      register: backup_disk

    - name: BACKUP CONFIG | Create partition
      parted:
        device: '/dev/{{ backup_disk.stdout }}'
        number: 1
        state: present
      tags:
        - disk

    - name: BACKUP CONFIG | Create filesystem
      filesystem:
        fstype: ext4
        dev: '/dev/{{ backup_disk.stdout }}1'
      tags:
        - disk

    - name: BACKUP CONFIG | Create mount point
      file:
        path: /var/backup
        state: directory
      tags:
        - disk

    - name: BACKUP CONFIG | Mount disk
      mount:
        path: /var/backup
        src: '/dev/{{ backup_disk.stdout }}1'
        state: mounted
        fstype: ext4
      tags:
        - disk

    - name: BACKUP CONFIG | Add the user 'borg'
      user:
        name: borg
        comment: borg backup
      tags:
        - user
        - backup1

    - name: BACKUP CONFIG | Change file ownership, group and permissions
      file:
        path: /var/backup
        owner: borg
        group: borg
      tags:
        - user
        - backup2

    - name: BACKUP CONFIG | Create /home/borg/.ssh/
      file:
        path: /home/borg/.ssh
        mode: u=rwx,g-rwx,o-rwx
        state: directory
        owner: borg
        group: borg
      tags:
        - user
        - ssh-config
        - backup3

    - name: BACKUP CONFIG | fill /home/borg/.ssh/authorized_keys
      authorized_key:
        user: borg
        state: present
        key: "{{ lookup('file', '/tmp/id_rsa.pub/client/root/.ssh/id_rsa.pub') }}"
      tags:
        - ssh-config
        - backup5

    - name: BACKUP CONFIG | Borg init repo
      shell: rm -rf /var/backup/*
      tags:
        - borg

- name: CLIENT CONFIG | Borg
  hosts: client
  become: true
  vars:
    backup_vm_ip: 192.168.56.160
  tasks:
    - name: CLIENT CONFIG | Borg init repo
      shell: 'borg init --encryption=repokey borg@{{ backup_vm_ip }}:/var/backup/'
      environment:
        BORG_NEW_PASSPHRASE: "secret"
      tags:
        - borg

    - name: CLIENT CONFIG | Borg service & timer
      copy:
        src: '{{ item }}'
        dest: /etc/systemd/system/
      loop:
        - 'borg-backup.service'
        - 'borg-backup.timer'
      tags:
        - systemd

    - name: CLIENT CONFIG | Borg service & timer
      systemd:
        name: borg-backup.timer
        enabled: yes
        state: started
        daemon_reload: yes
      tags:
        - systemd
